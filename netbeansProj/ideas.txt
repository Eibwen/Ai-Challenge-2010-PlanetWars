AI STRATEGIES
Closest ones?

Second to smallest one, if neutral (assuming opponent will attack lowest neutral one)
----
Want high growth rate planets
----
Triangulate attacks... get 3 planets distributed around, so can attack quickly

-
Store a value for Difference from last turn, normalized for growth rate?






Want fastest production of units
convert distance to (dTurns)
calculate all planets based on forces+dTurns*rate


Recurse between the planets?


Do i know what enimy fleets are in the air???
reinforce high priority when defending anyway


====================
HubBot
Find groups that are within x distance of each other
Hubs at first contain neutral and enemy, calculate resistance (oposing forces, and enemy replecation)
Current base, picks one in hub, which is tasked with getting others in hub
They all defend each other, any attack is resisted priority 1
When stable (?) attacks hub close to it
--But hub is on its own until another one is stable and choose to attempt to spread there

Get planet list
Calculate all distances?
If within distance XX, add to hub (??? need algorithm for this)
--Hub properties:  .Colonized .Ruled .TotalMyShips .TotalNeutralShips .TotalEnemyShips .TotalGrowthRate .Consolidated
--  .Consolidate() .Attack()
--Any other properties planets have, constant or not
==Have A dictionary that stores stats from each turn, so can compare to last... or trends?
 --Might determine if it will fail, and retreat to nearest hub????
Each turn find ones that are Colonized, defend, then greedy conquest them?
Any Ruled ones, Find hub want to colonize, consolidate forces to closest planet to that, then send


================
SwarmBot
Attack closest planets
if no neutral or enemy planets are closest (closest 5 planets??)
-send ships to one of the closest planets that is near enemys -- don't want to send them back and forth tho

=================
Dommanance
Focus on neutral planets... if there is any neutral planet that i can take over, do it


================
Tree
Build a tree out of the planets
use that tree as supply lines, request reinforcemnts from parent, send to leafs


================
SnipeBot -- these names are fun to come up with
Variation of CopyBot that is smarter, try to take a planet right after the opponet uses most of their forces to kill the neutral
Look at their fleets
Fleet.Ships - DestPlanet.NumShips + GrowthRate * TurnsAhead
--Ideally TurnsAhead would be 1


================
CenterPlanet -- Hub distribution
Go after center planet 100% (find 4 most centered planets, take the one closest to current planet)
can attack all planets equally from that base
-Could always send extras to it, unless being attacked


=================
SuperFleet sub strategy
If a planet gets say, 1.2*LargestNeutralPlanetShipNum, have that send that full fleet around to neutral planets?
And same sorta thing with the enemy planets, but with 1.5* those



[AdvancedCounter Attack]
Any fleet where i can get something to arrive within X turns after they do
-it is good because it could run first, and if it is possible then total win, otherwise use normal strategies




Use the knapsack thing to see when i can take over all their planets?
--does it take into account the travel distance + growth?



TreeBot expanded
capture as many as possible at start (knapsack)
then limit each leaf to 1 subleaf
all leafs protect it's parent, and reinforce leaf


#################
Thoughts:
Thinking of it as a tree, need to decide when two planets should work together to take one planet, or each work on taking their own planet


(what??)
Most bots are going to be spreading out from around hte central point


Fastest Production:
Owning the most planets for the longest
taking off their planets efficently
Reducing their production abilities